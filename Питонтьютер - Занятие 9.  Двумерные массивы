Задача «Максимум»
Условие
Найдите индексы первого вхождения максимального элемента. Выведите два числа: номер строки и номер столбца, в которых стоит наибольший элемент в двумерном массиве. Если таких элементов несколько, то выводится тот, у которого меньше номер строки, а если номера строк равны то тот, у которого меньше номер столбца.
Программа получает на вход размеры массива n и m, затем n строк по m чисел в каждой.
A = [int(i) for i in input().split()]
n,m=A[0],A[1]
S=[[int(i) for i in input().split()] for j in range(n)]
maximum=max(S[0])
row, col=0, S[0].index(max(S[0]))
for i in range(1,n):
    if max(S[i]) > maximum:
        row, col=i, S[i].index(max(S[i]))
        maximum=max(S[i])
print(row, col)

Задача «Снежинка»
Условие
Дано нечетное число n. Создайте двумерный массив из n×n элементов, заполнив его символами "." (каждый элемент массива является строкой из одного символа). Затем заполните символами "*" среднюю строку массива, средний столбец массива, главную диагональ и побочную диагональ. В результате единицы в массиве должны образовывать изображение звездочки. Выведите полученный массив на экран, разделяя элементы массива пробелами.
n = int(input())
a = [['.'] * n for i in range(n)]
x = int(n/2)
for i in range(n):
    a[i][n-i-1], a[i][i] = '*', '*'
    a[x][i], a[i][x] = '*', '*'
for row in a:
    print(' '.join(row))

Задача «Шахматная доска»
Условие
Даны два числа n и m. Создайте двумерный массив размером n×m и заполните его символами "." и "*" в шахматном порядке. В левом верхнем углу должна стоять точка.
A = [int(i) for i in input().split()]
n,m=A[0],A[1]
S=[['*']*m for i in range(n)]
for i in range(n):
    for j in range(m):
        if i%2==0 and j%2==0:
            S[i][j]='.'
        elif i%2!=0 and j%2!=0:
            S[i][j]='.'
for row in S:
    print(' '.join(row))

Задача «Диагонали, параллельные главной»
Условие
Дано число n. Создайте массив размером n×n и заполните его по следующему правилу. На главной диагонали должны быть записаны числа 0. На двух диагоналях, прилегающих к главной, числа 1. На следующих двух диагоналях числа 2, и т.д.
n = int(input())
A = [[0]*n for i in range(n)]
for i in range(n):
    elem = 1
    number = i
    for j in range(i+1,n):
        A[i][j] = elem
        elem += 1
    j=0
    while number!=0:
        A[i][j] = number
        number -= 1
        j+=1
for row in A:
    print(' '.join([str(i) for i in row]))

Задача «Побочная диагональ»
Условие
Дано число n. Создайте массив размером n×n и заполните его по следующему правилу:
Числа на диагонали, идущей из правого верхнего в левый нижний угол равны 1.
Числа, стоящие выше этой диагонали, равны 0.
Числа, стоящие ниже этой диагонали, равны 2.
Полученный массив выведите на экран. Числа в строке разделяйте одним пробелом.
n = int(input())
A = [[0]*n for i in range(n)]
for i in range(n):
    A[i] = [0] * (n-i-1) + [1] + [2] * i
for row in A:
    print(' '.join([str(elem) for elem in row]))

Задача «Поменять столбцы»
Условие
Дан двумерный массив и два числа: i и j. Поменяйте в массиве столбцы с номерами i и j и выведите результат.
Программа получает на вход размеры массива n и m, затем элементы массива, затем числа i и j.
Решение оформите в виде функции swap_columns(a, i, j).
def swap_columns(A, i, j):
    for y in range(n):
        A[y][i], A[y][j]=A[y][j], A[y][i]
    
n,m=[int(q) for q in input().split()]
A=[[int(i) for i in input().split()] for j in range(n)]
i, j=[int(x) for x in input().split()]
swap_columns(A, i, j)
for row in A:
    print(' '.join([str(q) for q in row]))


