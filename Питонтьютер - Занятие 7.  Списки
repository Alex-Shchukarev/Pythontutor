Задача «Четные индексы»
Условие
Выведите все элементы списка с четными индексами (то есть A[0], A[2], A[4], ...).
a = input().split()
for i in range(len(a)):
    if i%2==0:
        print(a[i])
    
Задача «Четные элементы»
Условие
Выведите все четные элементы списка. При этом используйте цикл for, перебирающий элементы списка, а не их индексы!
a = [int(s) for s in input().split()]
for i in a:
    if i%2==0:
        print(i)

Задача «Больше предыдущего»
Условие
Дан список чисел. Выведите все элементы списка, которые больше предыдущего элемента.
max=0
a = [int(s) for s in input().split()]
max=a[0]
for i in a:
    if i>max:
        print(i)
    max=i

Задача «Соседи одного знака»
Условие
Дан список чисел. Если в нем есть два соседних элемента одного знака, выведите эти числа. Если соседних элементов одного знака нет — не выводите ничего. Если таких пар соседей несколько — выведите первую пару.
a = [int(i) for i in input().split()]
n=1
s=a[n]
for i in a:
    if i>0 and s>0:
        print(i, s)
        break
    elif i<0 and s<0:
        print(i, s)
        break
    n+=1
    if n<=(len(a)-1):
        s=a[n]
    else:
        break

Задача «Больше своих соседей»
Условие
Дан список чисел. Определите, сколько в этом списке элементов, которые больше двух своих соседей, и выведите количество таких элементов. Крайние элементы списка никогда не учитываются, поскольку у них недостаточно соседей.
n=0
a = [int(i) for i in input().split()]
for i in range(1, len(a)-1):
    if a[i] > a[i-1] and a[i]>a[i+1]:
        n+=1
print(n)

Задача «Наибольший элемент»
Условие
Дан список чисел. Выведите значение наибольшего элемента в списке, а затем индекс этого элемента в списке. Если наибольших элементов несколько, выведите индекс первого из них.
n=0
a = [int(i) for i in input().split()]
max=a[0]
for i in range(1, len(a)):
    if a[i] > max:
        max=a[i]
        n=i
print(max,n)

Задача «Шеренга»
Условие
Петя перешёл в другую школу. На уроке физкультуры ему понадобилось определить своё место в строю. Помогите ему это сделать.
Программа получает на вход невозрастающую последовательность натуральных чисел, означающих рост каждого человека в строю. После этого вводится число X – рост Пети. Все числа во входных данных натуральные и не превышают 200.
Выведите номер, под которым Петя должен встать в строй. Если в строю есть люди с одинаковым ростом, таким же, как у Пети, то он должен встать после них.
a = [int(i) for i in input().split()]
Pety=int(input())
for i in range(len(a)):
    if Pety > a[i]:
        print(i+1)
        break
    if Pety <= a[len(a)-1]:
        print(len(a)+1)
        break
        
Задача «Количество различных элементов»
Условие
Дан список, упорядоченный по неубыванию элементов в нем. Определите, сколько в нем различных элементов.
a = [int(i) for i in input().split()]
f=a[0]
ind, n=1, 1
while ind < len(a):
    if a[ind]!=f:
        n+=1
    f=a[ind]
    ind+=1
print(n)

Задача «Переставить соседние»
Условие
Переставьте соседние элементы списка (A[0] c A[1], A[2] c A[3] и т. д.). Если элементов нечетное число, то последний элемент остается на своем месте.
a = input().split()
if len(a)%2==0:
    for i in range(0,len(a),2):
        a[i],a[i+1]=a[i+1],a[i]
    print(' '.join(a))
else:
    for i in range(0,len(a)-1,2):
        a[i],a[i+1]=a[i+1],a[i]
    print(' '.join(a))

Задача «Переставить min и max»
Условие
В списке все элементы различны. Поменяйте местами минимальный и максимальный элемент этого списка.
A = [int(i) for i in input().split()]
maxim_el=max(A)
minim_el=min(A)
for i in range(0,len(A)):
    if A[i]==minim_el:
        A[i]=maxim_el
    elif A[i]==maxim_el:
        A[i]=minim_el
    print(A[i], end=' ')

Задача «Удалить элемент»
Условие
Дан список из чисел и индекс элемента в списке k. Удалите из списка элемент с индексом k, сдвинув влево все элементы, стоящие правее элемента с индексом k.
Программа получает на вход список, затем число k. Программа сдвигает все элементы, а после этого удаляет последний элемент списка при помощи метода pop() без параметров.
Программа должна осуществлять сдвиг непосредственно в списке, а не делать это при выводе элементов. Также нельзя использовать дополнительный список. Также не следует использовать метод pop(k) с параметром.
A = [int(i) for i in input().split()]
k=int(input())
for i in range(k,len(A)-1):
    A[i]=A[i+1]
A.pop()
print(' '.join([str(i) for i in A]))

Задача «Вставить элемент»
Условие
Дан список целых чисел, число k и значение C. Необходимо вставить в список на позицию с индексом k элемент, равный C, сдвинув все элементы, имевшие индекс не менее k, вправо.
Поскольку при этом количество элементов в списке увеличивается, после считывания списка в его конец нужно будет добавить новый элемент, используя метод append.
Вставку необходимо осуществлять уже в считанном списке, не делая этого при выводе и не создавая дополнительного списка.
A = [int(i) for i in input().split()]
s = [int(i) for i in input().split()]
k,c=s[0],s[1]
for i in range(k,len(A)):
    buf, A[i]=A[i], c
    c=buf
A.append(c)
print(' '.join([str(i) for i in A]))

Задача «Количество совпадающих пар»
Условие
Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу. Считается, что любые два элемента, равные друг другу образуют одну пару, которую необходимо посчитать.
A = [int(i) for i in input().split()]
n=0
for i in range(0,len(A)-1):
    for j in range(i+1,len(A)):
        if A[i]==A[j]:
            n+=1
print(n)

Задача «Уникальные элементы»
Условие
Дан список. Выведите те его элементы, которые встречаются в списке только один раз. Элементы нужно выводить в том порядке, в котором они встречаются в списке.
A = [int(i) for i in input().split()]
for i in range(0,len(A)):
    if A.count(A[i])<2:
        print(A[i], end=' ')

Задача «Кегельбан»
Условие
N кеглей выставили в один ряд, занумеровав их слева направо числами от 1 до N. Затем по этому ряду бросили K шаров, при этом i-й шар сбил все кегли с номерами от li до ri включительно. Определите, какие кегли остались стоять на месте.
Программа получает на вход количество кеглей N и количество бросков K. Далее идет K пар чисел li, ri, при этом 1≤ li≤ ri≤ N.
Программа должна вывести последовательность из N символов, где j-й символ есть “I”, если j-я кегля осталась стоять, или “.”, если j-я кегля была сбита.
A=[]
N, K = [int(s) for s in input().split()]
for i in range(1,N+1):
    A.append(i)
    i+=1
S, B=[],[]
for i in range(K):
    B = [int(s) for s in input().split()]
    x, y=B[0], B[1]
    for j in range(x,y+1):
        S.append(j)
    i+=1
for i in range(N):
    if S.count(A[i])>= 1:
        print('.', end='')
    else:
        print('I', end='')

Задача «Ферзи»
Условие
Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били друг друга. Вам дана расстановка 8 ферзей на доске, определите, есть ли среди них пара бьющих друг друга.
Программа получает на вход восемь пар чисел, каждое число от 1 до 8 — координаты 8 ферзей. Если ферзи не бьют друг друга, выведите слово NO, иначе выведите YES.
B, n=[], 0
X,Y=[],[]
for i in range(8):
    B = [int(s) for s in input().split()]
    X.append(B[0])
    Y.append(B[1])
    i+=1
for i in range(8):
    for j in range(i+1,8):
        if abs(X[i]-X[j])==abs(Y[i]-Y[j]) or X[i]==X[j] or Y[i]==Y[j]:
            n+=1
if n>=1:
    print ('YES')
else:
    print('NO')
